# Generated by Django 2.2.12 on 2021-08-14 21:27

from django.db import migrations, models
import django.db.models.deletion
import otree.currency
import otree.db.idmap
import otree.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('total_performance', otree.db.models.IntegerField(default=0, null=True)),
                ('jugadores_C', otree.db.models.IntegerField(null=True)),
                ('jugadores_SC', otree.db.models.IntegerField(null=True)),
                ('pago_promedio_C', otree.db.models.CurrencyField(default=otree.currency.Currency('0.00'), null=True)),
                ('pago_promedio_SC', otree.db.models.CurrencyField(default=otree.currency.Currency('0.00'), null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_group', to='otree.Session')),
            ],
            options={
                'db_table': 'control_group',
            },
            bases=(models.Model, otree.db.idmap.GroupIDMapMixin),
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='control_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'control_subsession',
            },
            bases=(models.Model, otree.db.idmap.SubsessionIDMapMixin),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_role', otree.db.models.StringField(max_length=10000, null=True)),
                ('task_pay', otree.db.models.IntegerField(null=True)),
                ('palabras', otree.db.models.IntegerField(default=0, null=True)),
                ('mistakes', otree.db.models.IntegerField(default=0, null=True)),
                ('filtro', otree.db.models.IntegerField(null=True)),
                ('identificador', otree.db.models.StringField(max_length=10000, null=True, verbose_name='Para iniciar por favor ingrese las iniciales de su primer nombre y apellido seguido de su fecha de nacimiento. Por ejemplo, si usted se llama Lina Ríos y usted nació el 11 de febrero de 1995, debe ingresar LR11021995. Escriba todo en mayúscula. Esta etiqueta es importante para asegurar su participación en el resto de la actividad y la realización de los pagos.')),
                ('consent', otree.db.models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('consent_account', otree.db.models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('market', otree.db.models.StringField(choices=[['C', 'Mercado C (con contribución): Mis tareas completadas dan un beneficio a los demás miembros del grupo, y yo me beneficio de las tareas completadas por los miembros del grupo que escojan este mercado.'], ['SC', 'Mercado SC (sin contribución): Me beneficio de las tareas completadas por los miembros del grupo que escojan el Mercado C, y mis tareas completadas me dan un beneficio más alto que en el mercado C, pero sólo a mí.']], max_length=10000, null=True, verbose_name='Por favor seleccione el mercado en el que desea participar esta ronda:')),
                ('belief', otree.db.models.IntegerField(choices=[[1, '1'], [2, '2'], [3, '3'], [4, '4'], [5, '5']], null=True, verbose_name='Recuerde que usted está en un grupo de 6 personas. De las otras 5 personas ¿Cuántas cree que seleccionaron el Mercado C (con contribución)?')),
                ('c_1', otree.db.models.IntegerField(choices=[[1, 'Mis tareas completadas dan un beneficio a los demás miembros del grupo, y yo me beneficio de las tareas completadas por los miembros del grupo que escojan este mercado.'], [0, 'Mis tareas completadas no dan un beneficio a los demás miembros del grupo, y yo me beneficio de las tareas completadas por los miembros del grupo que escojan este mercado.']], null=True, verbose_name='1. Por favor seleccione la respuesta que corresponde al Mercado C (con contribución):')),
                ('c_2', otree.db.models.IntegerField(choices=[[0, 'No me beneficio de las tareas completadas por los miembros del grupo que escojan el Mercado C, y mis tareas completadas me dan un beneficio más alto que en el mercado C, pero sólo a mí.'], [1, 'Me beneficio de las tareas completadas por los miembros del grupo que escojan el Mercado C, y mis tareas completadas me dan un beneficio más alto que en el mercado C, pero sólo a mí.']], null=True, verbose_name='2. Por favor seleccione la respuesta que corresponde al Mercado SC (sin contribución):')),
                ('p1', otree.db.models.IntegerField(choices=[[1, 'Hombre'], [2, 'Mujer'], [3, 'No binario']], null=True, verbose_name='1. ¿Con qué género se identifica?')),
                ('p2', otree.db.models.IntegerField(null=True, verbose_name='2. Edad (Escriba únicamente números')),
                ('p3', otree.db.models.IntegerField(choices=[[1, 'Estudiante'], [2, 'Desempleado'], [3, 'Empleado a jornada completa'], [4, 'Empleado a tiempo parcial'], [5, 'Trabajador independiente'], [6, 'Trabajador no remunerado (por ejemplo: ama de casa, empresa familiar)'], [7, 'Retirado/pensionado'], [8, 'Otro'], [9, 'No sabe']], null=True, verbose_name='3. ¿Cuál es su situación laboral actual?')),
                ('p4', otree.db.models.StringField(max_length=10000, null=True, verbose_name='4. Escriba el nombre de su profesión/ocupación')),
                ('p5', otree.db.models.IntegerField(choices=[[1, 'Ninguno'], [2, 'Primaria incompleta'], [3, 'Bachillerato'], [4, 'Técnico o Tecnólogo'], [5, 'Pregrado'], [6, 'Posgrado (Especialización, Maestría, Doctorado)']], null=True, verbose_name='5. ¿Cuál es el nivel educativo más alto que ha completado?')),
                ('p6', otree.db.models.IntegerField(choices=[[1, 'Subsidiado'], [2, 'Contributivo (incluye regímenes especiales)']], null=True, verbose_name='6. A qué régimen de seguridad social en salud pertenece')),
                ('p7_1', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)], null=True, verbose_name='Gobierno')),
                ('p7_2', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)], null=True, verbose_name='Ministerio de Salud y Protección Social')),
                ('p7_3', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)], null=True, verbose_name='Administradora de los Recursos del Sistema General de Seguridad Social en Salud -ADRES-')),
                ('p7_4', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4)], null=True, verbose_name='Administradora Colombiana de Pensiones -Colpensiones-')),
                ('p8_1', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Ayudar a otras personas me da mucha felicidad')),
                ('p8_2', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='No tengo una gran sensación de felicidad cuando actúo desinteresadamente')),
                ('p8_3', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Cada vez que tuve la oportunidad de ayudar a otros, me sentí muy bien después')),
                ('p8_4', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Ayudar a otras personas a las que no les va bien no mejora mi estado de ánimo')),
                ('p8_5', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='No siento que tenga que realizar actos altruistas hacia los demás')),
                ('p8_6', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='No considero que mi deber sea actuar desinteresadamente')),
                ('p8_7', otree.db.models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Siento el deber de ayudar a los demás siempre que sea posible para mí')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='control.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_player', to='otree.Session')),
                ('subsession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Subsession')),
            ],
            options={
                'db_table': 'control_player',
            },
            bases=(models.Model, otree.db.idmap.PlayerIDMapMixin),
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control.Subsession'),
        ),
    ]
